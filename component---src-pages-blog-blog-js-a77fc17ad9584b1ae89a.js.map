{"version":3,"sources":["webpack:///./src/pages/Blog/Blog.js","webpack:///./src/layouts/BlogLayout/BlogLayout.js","webpack:///./src/layouts/BlogLayout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Blog","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_free_regular_svg_icons__WEBPACK_IMPORTED_MODULE_3__","_components_Anchor__WEBPACK_IMPORTED_MODULE_4__","_layouts_BlogLayout__WEBPACK_IMPORTED_MODULE_5__","_Blog_module_css__WEBPACK_IMPORTED_MODULE_6__","_Blog_module_css__WEBPACK_IMPORTED_MODULE_6___default","BlogPostPreview","_ref","excerpt","path","date","title","a","createElement","className","classes","preview","previewTitle","href","previewDate","icon","faCalendar","style","margin","previewExcerpt","_ref2","_ref2$data","data","_data$allMarkdownRema","allMarkdownRemark","_data$allMarkdownRema2","edges","posts","_data$site","site","_data$site$siteMetada","siteMetadata","pageTitle","nonEmptyPosts","filter","post","node","frontmatter","length","pageDescription","map","_ref3","id","_post$frontmatter","key","propTypes","PropTypes","string","isRequired","shape","arrayOf","BlogLayout","children","react_default","PageLayout","titleHref","container"],"mappings":"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","file":"component---src-pages-blog-blog-js-a77fc17ad9584b1ae89a.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar } from '@fortawesome/free-regular-svg-icons';\n\nimport Anchor from '../../components/Anchor';\nimport BlogLayout from '../../layouts/BlogLayout';\n\nimport classes from './Blog.module.css';\n\nfunction BlogPostPreview({\n  excerpt,\n  path,\n  date,\n  title,\n}) {\n  return (\n    <div className={classes.preview}>\n      <h1 className={classes.previewTitle}>\n        <Anchor\n          href={path}\n        >\n          {title}\n        </Anchor>\n      </h1>\n      <div className={classes.previewDate}>\n        <FontAwesomeIcon\n          icon={faCalendar}\n          style={{\n            margin: '-1px 0.5em 0 0',\n          }}\n        />\n        <span>{date}</span>\n      </div>\n      <div className={classes.previewExcerpt}>\n        {excerpt}\n      </div>\n    </div>\n  );\n}\n\nBlogPostPreview.propTypes = {\n  path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n};\n\nexport default function Blog({\n  data = {},\n}) {\n  const {\n    allMarkdownRemark: {\n      edges: posts = [],\n    } = {},\n    site: {\n      siteMetadata: {\n        title: siteTitle,\n      } = {},\n    } = {},\n  } = data;\n\n  const pageTitle = `${siteTitle} - blog`;\n  const pageDescription = 'A personal blog';\n\n  const nonEmptyPosts = posts\n    .filter(post => post.node.frontmatter.title.length > 0);\n\n  return (\n    <BlogLayout pageTitle={pageTitle} pageDescription={pageDescription}>\n      <div>\n        {nonEmptyPosts\n          .map(({ node: post }) => {\n            const {\n              id,\n              excerpt,\n              frontmatter: {\n                path,\n                date,\n                title,\n              },\n            } = post;\n\n            return (\n              <BlogPostPreview\n                key={id}\n                excerpt={excerpt}\n                path={path}\n                date={date}\n                title={title}\n              />\n            );\n          })}\n      </div>\n    </BlogLayout>\n  );\n}\n\nBlog.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          frontmatter: PropTypes.shape({\n            path: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired,\n          }).isRequired,\n        }).isRequired,\n      })).isRequired,\n    }).isRequired,\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PageLayout from '../PageLayout';\n\nimport classes from './BlogLayout.module.css';\n\nfunction BlogLayout({ pageTitle, pageDescription, children }) {\n  return (\n    <PageLayout\n      pageTitle={pageTitle}\n      pageDescription={pageDescription}\n      title=\"blog\"\n      titleHref=\"/blog\"\n    >\n      <main className={classes.container}>\n        { children }\n      </main>\n    </PageLayout>\n  );\n}\n\nBlogLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  pageTitle: PropTypes.string.isRequired,\n  pageDescription: PropTypes.string.isRequired,\n};\n\nexport default BlogLayout;\n","import BlogLayout from './BlogLayout';\n\nexport default BlogLayout;\n"],"sourceRoot":""}